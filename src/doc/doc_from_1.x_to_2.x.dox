namespace Carna
{

/** \page   From1xTo2x  API Evolution: From 1.x to 2.x
  *
  * This page provides an overview of the changes that have been made to the 2.x API from an 1.x point of view.
  *
  * \section Api2xMotivation    Motivation
  *
  * The top half of the following picture illustrates the core problems with the 1.x API.
  * First of all the architecture is highly centralized:
  * The \c Base3DWidget class, and it's derivations like \c VolumeView or \c SlicePlaneView respectively, implement all the rendering logic.
  * Futhermore: although the 1.x API bases on a MVC approach, the design of the API doesn't follow this pattern very strictly.
  * As a consequence, not only do the view and the controller components intersect upon the central \c Base3DWidget class;
  * the \c Base3DWidget class is also derived from \c QGLWidget.
  * Therefore, the whole rendering logic is coupled tightly with \c QGLWidget.
  * These two drawbacks make automatic testing practically impossible.
  *
  * \image html from_1.x_to_2.x/overview01.png
  *
  * \section Api2xSubstitutions API 2.x Changes in Detail
  *
  * The solution to these issues is presented on the bottom half of the above illustration.
  * The rendering logic has been transfered to a dedicated \ref base::view::Renderer class.
  * Any specific visualization is now no longer provided by a \c QGLWidget but by a \ref base::Visualization implementation.
  * In contrast to the old \c Base3DWidget the \ref base::Visualization class is not only coupled loosely with \c QGLWidget, it also implements practically no intelligence:
  * all it does is associating some view and some controller with each other.
  * As a consequence, the architecture is much better distributed and the rendering logic is independet of \c QGLWidget.
  *
  * The below illustration shows the changes in more detail.
  *
  * \image html from_1.x_to_2.x/overview02.png
  */
  
}  // namespace Carna
